{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\nVue.use(Vuex);\nvar store = {};\nvar state = {\n  blogs: [],\n  count: 1,\n  blog: {}\n};\nvar plugins = [createPersistedState({\n  storage: window.sessionStorage\n})];\nvar mutations = {\n  ADD_BLOG: function ADD_BLOG(state, blog) {\n    // console.log('HIIIII')\n    state.blogs.push(blog);\n    state.count += 1;\n  },\n  DELETE_BLOG: function DELETE_BLOG(state, id) {\n    var blogs = state.blogs;\n    blogs = blogs.filter(function (eachblog) {\n      return eachblog.id !== id;\n    });\n    state.blogs = blogs;\n  },\n  EDIT_BLOG: function EDIT_BLOG(state, blog) {\n    // console.log('Hii23', blog)\n    state.blogs.forEach(function (b) {\n      if (b.id === blog.id) {\n        b = blog;\n      }\n    });\n  }\n};\nvar actions = {\n  addBlog: function addBlog(_ref, blog) {\n    var commit = _ref.commit;\n    // console.log('hbjhjhjhjkkjk')\n    commit('ADD_BLOG', blog);\n  },\n  deleteBlog: function deleteBlog(_ref2, blog) {\n    var commit = _ref2.commit;\n    // console.log('Inside action')\n    commit('DELETE_BLOG', blog);\n  },\n  editBlog: function editBlog(_ref3, blog) {\n    var commit = _ref3.commit;\n    // console.log('Hii')\n    commit('EDIT_BLOG', blog);\n  }\n};\nvar getters = {\n  blogsList: function blogsList(state) {\n    // console.log('HIIIII')\n    return state.blogs;\n  },\n  blogToEdit: function blogToEdit(state) {\n    console.log('HEHE');\n    return state.blog;\n  }\n};\nstore = new Vuex.Store({\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters,\n  plugins: plugins\n});\nexport default store;","map":{"version":3,"sources":["/Users/chaitanyavivek/Desktop/jest_test7/src/store/index.js"],"names":["Vue","Vuex","createPersistedState","use","store","state","blogs","count","blog","plugins","storage","window","sessionStorage","mutations","ADD_BLOG","push","DELETE_BLOG","id","filter","eachblog","EDIT_BLOG","forEach","b","actions","addBlog","commit","deleteBlog","editBlog","getters","blogsList","blogToEdit","console","log","Store"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,oBAAP,MAAiC,qBAAjC;AACAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AACA,IAAIG,KAAK,GAAG,EAAZ;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,EADK;AAEZC,EAAAA,KAAK,EAAE,CAFK;AAGZC,EAAAA,IAAI,EAAE;AAHM,CAAd;AAKA,IAAMC,OAAO,GAAG,CAACP,oBAAoB,CAAC;AAClCQ,EAAAA,OAAO,EAAEC,MAAM,CAACC;AADkB,CAAD,CAArB,CAAhB;AAIA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,QADgB,oBACNT,KADM,EACCG,IADD,EACO;AACrB;AACAH,IAAAA,KAAK,CAACC,KAAN,CAAYS,IAAZ,CAAiBP,IAAjB;AACAH,IAAAA,KAAK,CAACE,KAAN,IAAe,CAAf;AACD,GALe;AAMhBS,EAAAA,WANgB,uBAMHX,KANG,EAMIY,EANJ,EAMQ;AACtB,QAAIX,KAAK,GAAGD,KAAK,CAACC,KAAlB;AACAA,IAAAA,KAAK,GAAGA,KAAK,CAACY,MAAN,CAAa,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACF,EAAT,KAAgBA,EAApB;AAAA,KAArB,CAAR;AACAZ,IAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACD,GAVe;AAWhBc,EAAAA,SAXgB,qBAWLf,KAXK,EAWEG,IAXF,EAWQ;AACtB;AACAH,IAAAA,KAAK,CAACC,KAAN,CAAYe,OAAZ,CAAoB,UAAAC,CAAC,EAAI;AACvB,UAAIA,CAAC,CAACL,EAAF,KAAST,IAAI,CAACS,EAAlB,EAAsB;AACpBK,QAAAA,CAAC,GAAGd,IAAJ;AACD;AACF,KAJD;AAKD;AAlBe,CAAlB;AAqBA,IAAMe,OAAO,GAAG;AACdC,EAAAA,OADc,yBACKhB,IADL,EACW;AAAA,QAAfiB,MAAe,QAAfA,MAAe;AACvB;AACAA,IAAAA,MAAM,CAAC,UAAD,EAAajB,IAAb,CAAN;AACD,GAJa;AAKdkB,EAAAA,UALc,6BAKQlB,IALR,EAKc;AAAA,QAAfiB,MAAe,SAAfA,MAAe;AAC1B;AACAA,IAAAA,MAAM,CAAC,aAAD,EAAgBjB,IAAhB,CAAN;AACD,GARa;AASdmB,EAAAA,QATc,2BASMnB,IATN,EASY;AAAA,QAAfiB,MAAe,SAAfA,MAAe;AACxB;AACAA,IAAAA,MAAM,CAAC,WAAD,EAAcjB,IAAd,CAAN;AACD;AAZa,CAAhB;AAeA,IAAMoB,OAAO,GAAG;AACdC,EAAAA,SADc,qBACHxB,KADG,EACI;AAChB;AACA,WAAOA,KAAK,CAACC,KAAb;AACD,GAJa;AAKdwB,EAAAA,UALc,sBAKFzB,KALE,EAKK;AACjB0B,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,WAAO3B,KAAK,CAACG,IAAb;AACD;AARa,CAAhB;AAWAJ,KAAK,GAAG,IAAIH,IAAI,CAACgC,KAAT,CAAe;AACrB5B,EAAAA,KAAK,EAALA,KADqB;AAErBkB,EAAAA,OAAO,EAAPA,OAFqB;AAGrBV,EAAAA,SAAS,EAATA,SAHqB;AAIrBe,EAAAA,OAAO,EAAPA,OAJqB;AAKrBnB,EAAAA,OAAO,EAAPA;AALqB,CAAf,CAAR;AAQA,eAAeL,KAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nVue.use(Vuex)\nlet store = {}\n\nconst state = {\n  blogs: [],\n  count: 1,\n  blog: {}\n}\nconst plugins = [createPersistedState({\n    storage: window.sessionStorage\n  })]\n\nconst mutations = {\n  ADD_BLOG (state, blog) {\n    // console.log('HIIIII')\n    state.blogs.push(blog)\n    state.count += 1\n  },\n  DELETE_BLOG (state, id) {\n    let blogs = state.blogs\n    blogs = blogs.filter(eachblog => eachblog.id !== id)\n    state.blogs = blogs\n  },\n  EDIT_BLOG (state, blog) {\n    // console.log('Hii23', blog)\n    state.blogs.forEach(b => {\n      if (b.id === blog.id) {\n        b = blog\n      }\n    })\n  }\n}\n\nconst actions = {\n  addBlog ({commit}, blog) {\n    // console.log('hbjhjhjhjkkjk')\n    commit('ADD_BLOG', blog)\n  },\n  deleteBlog ({commit}, blog) {\n    // console.log('Inside action')\n    commit('DELETE_BLOG', blog)\n  },\n  editBlog ({commit}, blog) {\n    // console.log('Hii')\n    commit('EDIT_BLOG', blog)\n  }\n}\n\nconst getters = {\n  blogsList (state) {\n    // console.log('HIIIII')\n    return state.blogs\n  },\n  blogToEdit (state) {\n    console.log('HEHE')\n    return state.blog\n  }\n}\n\nstore = new Vuex.Store({\n  state,\n  actions,\n  mutations,\n  getters,\n  plugins\n})\n\nexport default store"]},"metadata":{},"sourceType":"module"}